type Query {
  users(query: String): [User!]!
  posts(query: String): [Post]!
  comments(query: String): [Comment!]!
  me: User
  post: Post!
}

type Mutation {
  createUser(name: String!, email: String!, age: Int, married: Boolean): User!
  deleteUser(id: ID!): User!
  updateUser(id: ID!, data: updateUserInput!): User!
  createPost(title: String!, body: String!, author: ID!): Post!
  deletePost(id: ID!): Post!
  createComment(text: String!, author: ID!, post: ID!): Comment!
  deleteComment(id: ID!): Comment!
}

input updateUserInput {
  name: String
  email: String
  age: Int
}

input createUserInput {
  name: String!
  email: String!
  age: Int
  married: Boolean
}

type User {
  id: ID!
  name: String!
  age: Int
  email: String!
  married: Boolean
  posts: [Post!]!
  comments: [Comment!]!
}

type Post {
  id: ID!
  title: String!
  body: String!
  author: User!
  comments: [Comment!]!
}

type Comment {
  id: ID!
  text: String!
  author: User!
  post: Post!
}
